syntax = "proto3";

package agent;

import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

service GrpcServer {
    rpc is_alive (google.protobuf.Empty) returns (GeneralResponse) {}
    rpc stop (google.protobuf.Empty) returns (GeneralResponse) {}
    rpc CheckUser (CheckUserRequest) returns (CheckUserResponse) {}
    rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse) {}
    rpc RunModule (ModuleRunRequest) returns (stream ModuleRun) {}
    rpc CheckModuleRun (ModuleRunCheck) returns (ModuleRun) {}
}

// Common messages
message GeneralResponse {
    bool ok = 1;
    string message = 2;
}

message LLMConfig {
    optional string config_name = 1;
    optional string client = 2;
    optional string model = 3;
    optional int32 max_tokens = 4;
    optional float temperature = 5;
    optional string api_base = 6;
}

message NodeServer {
    string communication_protocol = 1;
    int32 port = 2;
    string node_id = 3;
}

message NodeConfigInput {
    string ip = 1;
    optional int32 user_communication_port = 2;
    optional string user_communication_protocol = 3;
}

message NodeConfig {
    string id = 1;
    string owner = 2;
    string public_key = 3;
    string ip = 4;
    string user_communication_protocol = 5;
    string node_communication_protocol = 6;
    int32 user_communication_port = 7;
    int32 num_node_communication_servers = 8;
    repeated NodeServer servers = 9;
    repeated string ollama_models = 10;
    bool docker_jobs = 11;
    repeated int32 ports = 12;
    optional string routing_type = 13;
    optional string routing_url = 14;
    optional int32 num_gpus = 15;
    optional string arch = 16;
    optional string os = 17;
    optional int64 ram = 18;
    optional int64 vram = 19;
}

message Module {
    string id = 1;
    string name = 2;
    string description = 3;
    string author = 4;
    string module_url = 5;
    optional string module_type = 6;
    optional string module_version = 7;
    optional string module_entrypoint = 8;
    optional string execution_type = 9;
}

message DataGenerationConfig {
    optional bool save_outputs = 1;
    optional string save_outputs_location = 2;
    optional string save_outputs_path = 3;
    optional bool save_inputs = 4;
    optional string save_inputs_location = 5;
    optional string default_filename = 6;
}

// Module Deployments
message BaseDeployment {
   oneof node {
       NodeConfig node_config = 1;
       NodeConfigInput node_input = 2;
   }
   string name = 3;
   Module module = 4;
   google.protobuf.Struct config = 5;
   bool initialized = 6;
}

message ToolDeployment {
   oneof node {
       NodeConfig node_config = 1;
       NodeConfigInput node_input = 2;
   }
   string name = 3;
   Module module = 4;
   google.protobuf.Struct config = 5;
   optional DataGenerationConfig data_generation_config = 6;
   bool initialized = 7;
}

message AgentDeployment {
   oneof node {
       NodeConfig node_config = 1;
       NodeConfigInput node_input = 2;
   }
   string name = 3;
   Module module = 4;
   google.protobuf.Struct config = 5;
   optional DataGenerationConfig data_generation_config = 6;
   repeated ToolDeployment tool_deployments = 7;
   repeated BaseDeployment kb_deployments = 8;
   repeated BaseDeployment environment_deployments = 9;
   bool initialized = 10;
}

// Run messages
message ModuleRunRequest {
    string module_type = 1;
    string consumer_id = 2;
    google.protobuf.Struct inputs = 3;
    oneof deployment {
        AgentDeployment agent_deployment = 4;
        ToolDeployment tool_deployment = 5;
        BaseDeployment memory_deployment = 6;
        BaseDeployment kb_deployment = 7;
        BaseDeployment environment_deployment = 8;
    }
    repeated ModuleRun orchestrator_runs = 9;
}

message ModuleRun {
    string module_type = 1;
    string consumer_id = 2;
    google.protobuf.Struct inputs = 3;
    oneof deployment {
        AgentDeployment agent_deployment = 4;
        ToolDeployment tool_deployment = 5;
        BaseDeployment memory_deployment = 6;
        BaseDeployment kb_deployment = 7;
        BaseDeployment environment_deployment = 8;
    }
    repeated ModuleRun orchestrator_runs = 9;
    string status = 10;
    bool error = 11;
    optional string id = 12;
    repeated string results = 13;
    optional string error_message = 14;
    optional string created_time = 15;
    optional string start_processing_time = 16;
    optional string completed_time = 17;
    optional double duration = 18;
    optional string input_schema_ipfs_hash = 19;
}

message ModuleRunCheck {
    string module_type = 1;
    string run_id = 2;
}

// User messages
message CheckUserRequest {
    optional string user_id = 1;
    string public_key = 2;
}

message CheckUserResponse {
    bool is_registered = 1;
    string id = 2;
    string public_key = 3;
}

message RegisterUserRequest {
    string public_key = 1;
}

message RegisterUserResponse {
    string id = 1;
    string public_key = 2;
}