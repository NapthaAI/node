[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisord.log
loglevel=info

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[program:rabbitmq]
command=bash -c "
    rabbitmq-server -detached &&
    sleep 15 &&
    rabbitmqctl await_startup &&
    rabbitmqctl add_user %(ENV_RMQ_USER)s %(ENV_RMQ_PASSWORD)s &&
    rabbitmqctl set_user_tags %(ENV_RMQ_USER)s administrator &&
    rabbitmqctl set_permissions -p / %(ENV_RMQ_USER)s '.*' '.*' '.*' &&
    rabbitmqctl delete_user guest &&
    tail -f /dev/null"
autostart=true
autorestart=unexpected
stdout_logfile=/var/log/rabbitmq.log
stderr_logfile=/var/log/rabbitmq.err.log
priority=1

[program:postgresql]
command=/usr/lib/postgresql/16/bin/postgres -D /var/lib/postgresql/16/main -p %(ENV_LOCAL_DB_POSTGRES_PORT)s -h '*'
user=postgres
autostart=true
autorestart=true
stdout_logfile=/var/log/postgresql.log
stderr_logfile=/var/log/postgresql.err.log
priority=1

[program:init_postgres]
command=/app/init_postgres.sh
user=postgres
autostart=true
autorestart=false
startsecs=0
priority=2
stdout_logfile=/var/log/init_postgres.log
stderr_logfile=/var/log/init_postgres.err.log
stopasgroup=true

[program:init_db]
command=bash -c "until [ -f /tmp/postgres_initialized ]; do echo 'Waiting for PostgreSQL initialization...'; sleep 2; done && /root/miniforge3/envs/myenv/bin/python /app/node/storage/db/init_db.py"
directory=/app
autostart=true
autorestart=false
startsecs=0
priority=5
startretries=3
stdout_logfile=/var/log/init_db.log
stderr_logfile=/var/log/init_db.err.log
environment=
    LOCAL_DB_URL="postgresql://%(ENV_LOCAL_DB_POSTGRES_USERNAME)s:%(ENV_LOCAL_DB_POSTGRES_PASSWORD)s@localhost:3002/%(ENV_LOCAL_DB_POSTGRES_NAME)s"

[program:init_hub_user]
command=/root/miniforge3/envs/myenv/bin/python /app/node/storage/hub/init_hub.py --user
directory=/app
autostart=true
autorestart=false
startsecs=0
priority=10
startretries=3
stdout_logfile=/var/log/init_hub_user.log
stderr_logfile=/var/log/init_hub_user.err.log
environment=
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s",
    HUB_DB_SURREAL_NS="%(ENV_HUB_DB_SURREAL_NS)s",
    HUB_DB_SURREAL_NAME="%(ENV_HUB_DB_SURREAL_NAME)s",
    HUB_DB_SURREAL_PORT="%(ENV_HUB_DB_SURREAL_PORT)s"

[program:http_server]
command=/root/miniforge3/envs/myenv/bin/python /app/node/server/server.py --communication-protocol http --port 7001
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    IN_DOCKER="%(ENV_IN_DOCKER)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    LOCAL_DB_POSTGRES_PORT="%(ENV_LOCAL_DB_POSTGRES_PORT)s",
    LOCAL_DB_POSTGRES_USERNAME="%(ENV_LOCAL_DB_POSTGRES_USERNAME)s",
    LOCAL_DB_POSTGRES_PASSWORD="%(ENV_LOCAL_DB_POSTGRES_PASSWORD)s",
    LOCAL_DB_POSTGRES_NAME="%(ENV_LOCAL_DB_POSTGRES_NAME)s",
    HUB_DB_SURREAL_PORT="%(ENV_HUB_DB_SURREAL_PORT)s",
    HUB_DB_SURREAL_NS="%(ENV_HUB_DB_SURREAL_NS)s",
    HUB_DB_SURREAL_NAME="%(ENV_HUB_DB_SURREAL_NAME)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s"

stdout_logfile=/var/log/http_server.log
stderr_logfile=/var/log/http_server.err.log

[program:ws_server]
command=/root/miniforge3/envs/myenv/bin/python /app/node/server/server.py --communication-protocol ws --port 7002
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    IN_DOCKER="%(ENV_IN_DOCKER)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    LOCAL_DB_POSTGRES_PORT="%(ENV_LOCAL_DB_POSTGRES_PORT)s",
    LOCAL_DB_POSTGRES_USERNAME="%(ENV_LOCAL_DB_POSTGRES_USERNAME)s",
    LOCAL_DB_POSTGRES_PASSWORD="%(ENV_LOCAL_DB_POSTGRES_PASSWORD)s",
    LOCAL_DB_POSTGRES_NAME="%(ENV_LOCAL_DB_POSTGRES_NAME)s",
    HUB_DB_SURREAL_PORT="%(ENV_HUB_DB_SURREAL_PORT)s",
    HUB_DB_SURREAL_NS="%(ENV_HUB_DB_SURREAL_NS)s",
    HUB_DB_SURREAL_NAME="%(ENV_HUB_DB_SURREAL_NAME)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s"

stdout_logfile=/var/log/ws_server.log
stderr_logfile=/var/log/ws_server.err.log

[program:celery]
command=/bin/bash /app/celery_worker_start_docker.sh
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    IN_DOCKER="%(ENV_IN_DOCKER)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    LOCAL_DB_POSTGRES_PORT="%(ENV_LOCAL_DB_POSTGRES_PORT)s",
    LOCAL_DB_POSTGRES_USERNAME="%(ENV_LOCAL_DB_POSTGRES_USERNAME)s",
    LOCAL_DB_POSTGRES_PASSWORD="%(ENV_LOCAL_DB_POSTGRES_PASSWORD)s",
    LOCAL_DB_POSTGRES_NAME="%(ENV_LOCAL_DB_POSTGRES_NAME)s",
    HUB_DB_SURREAL_PORT="%(ENV_HUB_DB_SURREAL_PORT)s",
    HUB_DB_SURREAL_NS="%(ENV_HUB_DB_SURREAL_NS)s",
    HUB_DB_SURREAL_NAME="%(ENV_HUB_DB_SURREAL_NAME)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s"
stdout_logfile=/var/log/celery.log
stderr_logfile=/var/log/celery.err.log

[program:ollama]
command=ollama serve
autostart=true
autorestart=true
stdout_logfile=/var/log/ollama.log
stderr_logfile=/var/log/ollama.err.log
priority=10  